/* 深空回响 - 背景系统样式 */

/* 背景颜色预设 */
.background-normal {
    background: linear-gradient(135deg, #d4d4d4 0%, #a8a8a8 100%);
}

.background-morning {
    background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%);
}

.background-tense {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
}

.background-space {
    background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);
}

.background-alert {
    background: linear-gradient(135deg, #ff0000 0%, #8b0000 100%);
}

.background-calm {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.background-mystery {
    background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
}

.background-void {
    background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);
}

/* 背景过渡动画 */
#background-container {
    transition: background 2s ease-in-out;
}

/* 故障效果 */
.glitch-active {
    animation: glitch 0.3s ease-in-out;
}

@keyframes glitch {
    0%, 100% {
        transform: translate(0);
        filter: hue-rotate(0deg);
    }
    10% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    20% {
        transform: translate(2px, -2px);
        filter: hue-rotate(180deg);
    }
    30% {
        transform: translate(-2px, -2px);
        filter: hue-rotate(270deg);
    }
    40% {
        transform: translate(2px, 2px);
        filter: hue-rotate(360deg);
    }
    50% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(450deg);
    }
    60% {
        transform: translate(2px, -2px);
        filter: hue-rotate(540deg);
    }
    70% {
        transform: translate(-2px, -2px);
        filter: hue-rotate(630deg);
    }
    80% {
        transform: translate(2px, 2px);
        filter: hue-rotate(720deg);
    }
    90% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(810deg);
    }
}

/* 屏幕抖动效果 */
.shake-active {
    animation: shake 0.5s ease-in-out;
}

@keyframes shake {
    0%, 100% { transform: translate(0); }
    10% { transform: translate(-5px, 0); }
    20% { transform: translate(5px, 0); }
    30% { transform: translate(-5px, 0); }
    40% { transform: translate(5px, 0); }
    50% { transform: translate(-5px, 0); }
    60% { transform: translate(5px, 0); }
    70% { transform: translate(-5px, 0); }
    80% { transform: translate(5px, 0); }
    90% { transform: translate(-5px, 0); }
}

/* 颜色突变效果 */
.color-shift {
    animation: colorShift 0.8s ease-in-out;
}

@keyframes colorShift {
    0% { filter: hue-rotate(0deg); }
    25% { filter: hue-rotate(90deg); }
    50% { filter: hue-rotate(180deg); }
    75% { filter: hue-rotate(270deg); }
    100% { filter: hue-rotate(360deg); }
}

/* 纹理闪烁效果 */
.texture-flicker {
    animation: flicker 0.1s ease-in-out infinite;
}

@keyframes flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.3; }
}

/* 扫描线效果 */
.scanlines {
    position: relative;
}

.scanlines::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 0, 0.1) 2px,
        rgba(0, 255, 0, 0.1) 4px
    );
    pointer-events: none;
    animation: scanlineMove 2s linear infinite;
}

@keyframes scanlineMove {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
}

/* 噪点效果 */
.noise {
    position: relative;
}

.noise::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(circle at 20% 50%, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
        radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
        radial-gradient(circle at 40% 80%, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 50px 50px, 30px 30px, 70px 70px;
    pointer-events: none;
    animation: noiseMove 0.1s linear infinite;
}

@keyframes noiseMove {
    0% { transform: translate(0, 0); }
    10% { transform: translate(-1px, 1px); }
    20% { transform: translate(1px, -1px); }
    30% { transform: translate(-1px, -1px); }
    40% { transform: translate(1px, 1px); }
    50% { transform: translate(-1px, 1px); }
    60% { transform: translate(1px, -1px); }
    70% { transform: translate(-1px, -1px); }
    80% { transform: translate(1px, 1px); }
    90% { transform: translate(-1px, 1px); }
    100% { transform: translate(0, 0); }
}

/* 脉冲效果 */
.pulse {
    animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
}

/* 呼吸效果 */
.breathe {
    animation: breathe 4s ease-in-out infinite;
}

@keyframes breathe {
    0%, 100% {
        transform: scale(1);
        opacity: 0.9;
    }
    50% {
        transform: scale(1.02);
        opacity: 1;
    }
}

/* 渐变过渡效果 */
.gradient-transition {
    background-size: 200% 200%;
    animation: gradientMove 3s ease infinite;
}

@keyframes gradientMove {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* 星空效果 */
.stars {
    position: relative;
    overflow: hidden;
}

.stars::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(2px 2px at 20px 30px, #eee, transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.8), transparent),
        radial-gradient(1px 1px at 90px 40px, #fff, transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.6), transparent),
        radial-gradient(2px 2px at 160px 30px, #ddd, transparent);
    background-repeat: repeat;
    background-size: 200px 100px;
    animation: twinkle 4s ease-in-out infinite;
}

@keyframes twinkle {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 1; }
}

/* 响应式背景效果 */
@media (max-width: 768px) {
    .scanlines::before {
        background-size: 25px 25px;
    }
    
    .noise::after {
        background-size: 25px 25px, 15px 15px, 35px 35px;
    }
}

@media (max-width: 480px) {
    .scanlines::before {
        background-size: 20px 20px;
    }
    
    .noise::after {
        background-size: 20px 20px, 10px 10px, 30px 30px;
    }
}
